name: Build
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    types: [ opened, synchronize, reopened ]

env:
  GRADLE_HOME: ${{ github.workspace }}/gradle-home

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Spotless Apply
        run: ./gradlew spotlessApply

      - name: Cache gradle dependencies
        uses: actions/cache@v3.0.8
        with:
          path: ${{ env.GRADLE_HOME }}/caches
          # Include the SHA in the hash so this step always adds a cache entry. If we didn't use the SHA, the artifacts
          # would only get cached once for each build config hash.
          # Don't use ${{ runner.os }} in the key so we don't re-assemble for UI tests.
          key: gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/buildSrc/**') }}-${{ github.sha }}
          # The first time a SHA is assembled, we still want to load dependencies from the cache.
          # Note that none of jobs dependent on this one need restore keys, since they'll always have an exact hit.
          restore-keys: |
            gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/buildSrc/**') }}-

      - name: Run checks and tests
        run: ./gradlew detekt ktlintCheck test --build-cache --no-daemon --stacktrace --gradle-user-home "$GRADLE_HOME"

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: "${{ github.workspace }}/**/build/reports/tests"

      - name: Jacoco test report
        run: ./gradlew jacocoTestReport

      - name: Upload jacoco report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: "${{ github.workspace }}/**/build/reports/jacoco"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
